class Solution {
public:
    int bfs(int start,vector<vector<int>>& graph,vector<int>&vis){
        vis[start]=0;
        queue<int>q;
        q.push(start);
        while(q.size()){
            int node=q.front();
            q.pop();
            for(auto &v:graph[node]){
                if(vis[v]==-1){
                    vis[v]=!vis[node];
                    q.push(v);
                }
                else if(vis[v]!=-1 && vis[v]==vis[node])return 0; 
            }
        }
        return 1;
    }
    bool isBipartite(vector<vector<int>>& graph) {
        vector<int>vis(graph.size(),-1);
        for(int i=0;i<graph.size();i++){
            if(vis[i]==-1){
                if(bfs(i,graph,vis)==0)return 0;
            }
        }
        return 1;
    }
};
