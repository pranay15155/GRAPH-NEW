class Solution {
public:
    int orangesRotting(vector<vector<int>>& grid) {
        int count=0;
        queue<pair<int,int>>q;
        int n=grid.size(), m=grid[0].size();
        vector<vector<int>>vis(n,vector<int>(m,0));
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(vis[i][j]==0 && grid[i][j]==2){
                    q.push({i,j});
                    vis[i][j]=1;
                }
            }
        }
        while(q.size()){
            int size=q.size();
            count++;
            for(int t=0;t<size;t++){
            int row=q.front().first;
            int col=q.front().second;
            q.pop();
            int nrow[4]={-1,0,1,0};
            int ncol[4]={0,1,0,-1};
            for(int i=0;i<4;i++){
                int new_row=row+nrow[i];
                int new_col=col+ncol[i];
                if(new_row<0 || new_col<0 || new_row>=n || new_col>=m)continue;
                if(vis[new_row][new_col]==0 && grid[new_row][new_col]==1){
                       vis[new_row][new_col]=1;
                       q.push({new_row,new_col});
                       grid[new_row][new_col]=2;
                }
            }
            }
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==1)return -1;
            }
        }
        return count>0?count-1:0;
        
    }
};
