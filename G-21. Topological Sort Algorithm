//This Algorithm will not give proper topo sort algo for Directed Cyclic Graph hence works only for Directed Acyclic Graph
class Solution
{
	public:
	void dfs(int node, vector<int> adj[],stack<int>&st,vector<int>&vis){
	    vis[node]=1;
	    for(auto &v:adj[node]){
	        if(vis[v]==0){
	            dfs(v,adj,st,vis);
	        }
	    }
	    st.push(node);
	}
	vector<int> topoSort(int V, vector<int> adj[]) 
	{
	    stack<int>st;
	    vector<int>vis(V,0);
	    for(int i=0;i<V;i++){
	        if(vis[i]==0){
	            dfs(i,adj,st,vis);
	        }
	    }
	    vector<int>ans;
	    while(st.size()){
	        ans.push_back(st.top());
	        st.pop();
	    }
	    return ans;
	}
};
